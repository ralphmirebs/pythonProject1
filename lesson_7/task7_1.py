# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
#  который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции
# сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент
# первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    m = [[], [], []]  # пусть частный случай 3 на 3

    def __init__(self, matrix_in=None):
        if matrix_in is None:
            matrix_in = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
        self.m = matrix_in

    def __str__(self):
        for el in self.m:
            print(el)
        print('\n')

    def __add__(self, other):
        m_temp = Matrix()
        i = 0
        while i < 3:
            j = 0
            while j < 3:
                m_temp.m[i][j] = self.m[i][j] + other.m[i][j]
                j += 1
            i += 1
        return m_temp


m = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
m2 = Matrix([[10, 11, 12], [-13, -14, -15], [16, 17, 18]])
m3 = Matrix()

m.__str__()
m2.__str__()


m3 = m + m2    # красивее, чем m3 = m.__add__(self, m2)

m3.__str__()
